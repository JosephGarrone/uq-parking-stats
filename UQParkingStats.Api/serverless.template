{
	"AWSTemplateFormatVersion" : "2010-09-09",
	"Transform" : "AWS::Serverless-2016-10-31",
	"Description" : "An AWS Serverless Application.",
	"Parameters": {
		"ShouldCreateTable": {
			"Type": "String",
			"AllowedValues": ["true", "false"],
			"Description": "If true then the DynamoDB parking table will be created with the CloudFormation stack."
		},
		"ParkingDataTableName": {
			"Type": "String",
			"Description": "Name of the DynamoDB table used to store parking data. If left blank a new table will be created.",
			"MinLength": "0"
		},
		"ReadCapacity" : {
			"Type" : "Number",
			"Description" : "Read capacity for the DynamoDB tables.",
			"Default" : "3",
			"MinValue" : 1
		},
		"WriteCapacity" : {
			"Type" : "Number",
			"Description" : "Write capacity for the DynamoDB tables.",
			"Default" : "3",
			"MinValue" : 1
		}
	}, 
	"Conditions" : {
		"CreateParkingDataTable" : {"Fn::Equals" : [{"Ref" : "ShouldCreateTable"}, "true"]},"ParkingDataTableNameGenerated" : {"Fn::Equals" : [{"Ref" : "ParkingDataTableName"}, ""]}
	},
	"Globals": {
		"Api": {
			"Cors": {
				"AllowOrigin": "*"
			}
		}
	},
	"Resources" : {
		"FetchData" : {
			"Type" : "AWS::Serverless::Function",
			"Properties": {
				"Handler": "UQParkingStats.Api::UQParkingStats.Api.Functions::FetchData",
				"Runtime": "dotnetcore2.1",
				"CodeUri": "",
				"MemorySize": 192,
				"Timeout": 10,
				"Role": null,
				"Policies": [ "AWSLambdaFullAccess" ],
				"Environment" : {
				  "Variables" : {
					"ParkingDataTable" : { "Fn::If" : ["CreateParkingDataTable", {"Ref":"ParkingDataTable"}, { "Ref" : "ParkingDataTableName" } ] }
				  }
				},
				"Events": {
					"PutResource": {
						"Type": "Api",
						"Properties": {
							"Path": "/fetch",
							"Method": "GET"
						}
					}
				}
			}
		},
		"GetCarparks" : {
			"Type" : "AWS::Serverless::Function",
			"Properties": {
				"Handler": "UQParkingStats.Api::UQParkingStats.Api.Functions::GetCarparks",
				"Runtime": "dotnetcore2.1",
				"CodeUri": "",
				"MemorySize": 192,
				"Timeout": 15,
				"Role": null,
				"Policies": [ "AWSLambdaFullAccess" ],
				"Environment" : {
				  "Variables" : {
					"ParkingDataTable" : { "Fn::If" : ["CreateParkingDataTable", {"Ref":"ParkingDataTable"}, { "Ref" : "ParkingDataTableName" } ] }
				  }
				},
				"Events": {
					"PutResource": {
						"Type": "Api",
						"Properties": {
							"Path": "/carparks",
							"Method": "GET"
						}
					}
				}
			}
		},
		"GetData" : {
			"Type" : "AWS::Serverless::Function",
			"Properties": {
				"Handler": "UQParkingStats.Api::UQParkingStats.Api.Functions::GetData",
				"Runtime": "dotnetcore2.1",
				"CodeUri": "",
				"MemorySize": 128,
				"Timeout": 30,
				"Role": null,
				"Policies": [ "AWSLambdaFullAccess" ],
				"Environment" : {
				  "Variables" : {
					"ParkingDataTable" : { "Fn::If" : ["CreateParkingDataTable", {"Ref":"ParkingDataTable"}, { "Ref" : "ParkingDataTableName" } ] }
				  }
				},
				"Events": {
					"PutResource": {
						"Type": "Api",
						"Properties": {
							"Path": "/data/{Carpark}/{Year}/{Month}/{Day}",
							"Method": "GET"
						}
					}
				}
			}
		},
		"ParkingDataTable": {
			"Type" : "AWS::DynamoDB::Table",
			"Condition" : "CreateParkingDataTable",
			"Properties" : {
				"TableName" : { "Fn::If" : ["ParkingDataTableNameGenerated", {"Ref" : "AWS::NoValue" }, { "Ref" : "ParkingDataTableName" } ] },
				"AttributeDefinitions" : [
					{"AttributeName" : "Date", "AttributeType" : "S"}
				],
				"KeySchema"            : [
					{"AttributeName" : "Date", "KeyType" : "HASH"}
				],
				"ProvisionedThroughput" : {
					"ReadCapacityUnits" : { "Ref" : "ReadCapacity" },
					"WriteCapacityUnits" : { "Ref" : "WriteCapacity" }
				}
			}
		}
	},
	"Outputs" : {
		"ApiURL" : {
			"Description" : "API endpoint URL for production environment",
			"Value" : { "Fn::Sub" : "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/" }
		},
		"ParkingDataTable" : {
			"Value" : { "Fn::If" : ["CreateParkingDataTable", {"Ref":"ParkingDataTable"}, { "Ref" : "ParkingDataTableName" } ] }
		}
	}
}